PCA_Output <- perform_PCA(Input_Image_File = Input_Image_File,
Input_Mask_File = Input_Mask_File,
Output_Dir = Output_Dir,
TypePCA = TypePCA,
FilterPCA = FilterPCA,
Excluded_WL = Excluded_WL,
nbCPU = nbCPU,
MaxRAM = MaxRAM,
Continuum_Removal = Continuum_Removal)
# Save the list as an RDS file
pca_output_rds_file_path = paste0(Output_Dir,"/",NameRaster,"/",TypePCA,"/PCA/","PCA_Output.rds")
saveRDS(PCA_Output, file = pca_output_rds_file_path)
# Later, load the list back into R
PCA_Output <- readRDS(pca_output_rds_file_path)
# path for the updated mask
Input_Mask_File <- PCA_Output$MaskPath
var_exp <- (PCA_Output$PCA_model$sdev^2/sum(PCA_Output$PCA_model$sdev^2))*100
barplot(var_exp, names.arg = colnames(PCA_Output$PCA_model$x))
pca_output_image_file_path = paste0(Output_Dir,"/",NameRaster,"/",TypePCA,"/PCA/","OutputPCA_30_PCs")
print(pca_output_image_file_path)
pca_output_image <- rast(pca_output_image_file_path)
plot(pca_output_image, main = "Principal Components", nc = 5, maxnl = 30)  # maxnl allows all 30 layers to be shown
# Define the path for PCA plots
# Define the path for individual PCA component plots
pca_plots_file_path <- paste0(Output_Dir, "/", NameRaster, "/", TypePCA, "/PCA/PCA_Plots")
# Create the directory if it doesn't exist
if (!dir.exists(pca_plots_file_path)) {
dir.create(pca_plots_file_path, recursive = TRUE, showWarnings = FALSE)
}
# Initialize a list to store output plot file paths
output_plots <- list()
# Loop through each layer in the PCA output image
for (i in 1:nlyr(pca_output_image)) {
# Extract each PC layer as a separate raster
pc_layer <- pca_output_image[[i]]
# Define the output file path for the plot
output_file <- paste0(pca_plots_file_path, "/PCA_PC_", i, ".png")
# Save the plot as a PNG
png(filename = output_file, width = 2000, height = 1500, res = 300)
plot(pc_layer,
main = paste0("Principal Component ", i),
col = terrain.colors(100))  # Customize colors if needed
dev.off()  # Close the PNG device
# Store the output file path
output_plots[[i]] <- output_file
}
# Optional: print confirmation
print("PCA plots saved to:")
print(pca_plots_file_path)
# Select components from the PCA/SPCA/MNF raster
# Sel_PC = path of the file where selected components are stored
Sel_PC <- select_PCA_components(Input_Image_File = Input_Image_File,
Output_Dir = Output_Dir,
PCA_Files = PCA_Output$PCA_Files,
TypePCA = PCA_Output$TypePCA,
File_Open = TRUE)
################################################################################
##                  Perform Spectral species mapping                          ##
## https://jbferet.github.io/biodivMapR/articles/biodivMapR_5.html            ##
################################################################################
print("MAP SPECTRAL SPECIES")
Kmeans_info <- map_spectral_species(Input_Image_File = Input_Image_File,
Input_Mask_File = PCA_Output$MaskPath,
Output_Dir = Output_Dir,
SpectralSpace_Output = PCA_Output,
nbclusters = nbclusters,
nbCPU = nbCPU, MaxRAM = MaxRAM)
rm(list = ls(all = TRUE))
gc()
graphics.off()
# Load necessary libraries
library(vegan)
library(biodivMapR)
library(doParallel)
library(terra)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(RColorBrewer)
library(readxl)
library(writexl)
library(dplyr)
main_folder <- 'C:/Users/Patrick/Documents/GitHub/UWW200_Master_Thesis_public/MasterThesisRCode/data'
spectral_species_files_path <- file.path(main_folder,'03_Spectral_Species')
spectral_species_images <- list.files(spectral_species_files_path)
spectral_species_images
for (image in spectral_species_images) {
print(image)
}
main_folder <- 'C:/Users/Patrick/Documents/GitHub/UWW200_Master_Thesis_public/MasterThesisRCode/data'
spectral_species_files_path <- file.path(main_folder,'03_Spectral_Species')
spectral_species_images <- list.dir(spectral_species_files_path)
rm(list = ls(all = TRUE))
gc()
graphics.off()
# Load necessary libraries
library(vegan)
library(biodivMapR)
library(doParallel)
library(terra)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(RColorBrewer)
library(readxl)
library(writexl)
library(dplyr)
main_folder <- 'C:/Users/Patrick/Documents/GitHub/UWW200_Master_Thesis_public/MasterThesisRCode/data'
spectral_species_files_path <- file.path(main_folder,'03_Spectral_Species')
spectral_species_images <- list.dirs(spectral_species_files_path)
for (image in spectral_species_images) {
print(image)
}
main_folder <- 'C:/Users/Patrick/Documents/GitHub/UWW200_Master_Thesis_public/MasterThesisRCode/data'
spectral_species_files_path <- file.path(main_folder,'03_Spectral_Species')
spectral_species_images <- list.dirs(spectral_species_files_path, full.names = TRUE)
for (image in spectral_species_images) {
print(image)
}
main_folder <- 'C:/Users/Patrick/Documents/GitHub/UWW200_Master_Thesis_public/MasterThesisRCode/data'
spectral_species_files_path <- file.path(main_folder,'03_Spectral_Species')
spectral_species_images <- list.files(spectral_species_files_path, full.names = TRUE)
for (image in spectral_species_images) {
print(image)
}
for (image in spectral_species_images) {
image_name <- basename(image)
print(image_name)
}
main_folder <- 'C:/Users/Patrick/Documents/GitHub/UWW200_Master_Thesis_public/MasterThesisRCode/data'
spectral_species_files_path <- file.path(main_folder,'03_Spectral_Species')
spectral_species_images <- list.files(spectral_species_files_path, full.names = TRUE)
for (ss_image in spectral_species_images) {
image_name <- basename(ss_image)
image <- rast(ss_image)
hist(image)
# Extract raster values as a vector
pixel_values <- values(image)
# Count occurrences of each unique value
pixel_counts <- table(pixel_values)
# Print results
print(pixel_counts)
# Convert to a data frame
histogram_df <- as.data.frame(pixel_counts)
# Remove rows where Pixel_Value = 0
histogram_df <- histogram_df[histogram_df$pixel_values != 0, ]
colnames(histogram_df) <- c("Spectral_Species", "Count")
# Calculate total number of pixels (excluding 0 values)
total_pixels <- sum(histogram_df$Count)
# Convert counts to proportions (percentages)
histogram_df$Proportion <- histogram_df$Count / total_pixels
# Use the diversity() function from vegan
shannon_index <- diversity(histogram_df$Count, index = "shannon")
# Print the result
print(shannon_index)
}
rm(list = ls(all = TRUE))
gc()
graphics.off()
# Load necessary libraries
library(vegan)
library(biodivMapR)
library(doParallel)
library(terra)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(RColorBrewer)
library(readxl)
library(writexl)
library(dplyr)
main_folder <- 'C:/Users/Patrick/Documents/GitHub/UWW200_Master_Thesis_public/MasterThesisRCode/data'
spectral_species_files_path <- file.path(main_folder,'03_Spectral_Species')
spectral_species_images <- list.files(spectral_species_files_path, full.names = TRUE)
for (ss_image in spectral_species_images) {
image_name <- basename(ss_image)
testsite_name <- sub("_SpectralSpecies\\.tiff$", "", image_name)
image <- rast(ss_image)
#hist(image)
# Extract raster values as a vector
pixel_values <- values(image)
# Count occurrences of each unique value
pixel_counts <- table(pixel_values)
# Print results
print(pixel_counts)
# Convert to a data frame
histogram_df <- as.data.frame(pixel_counts)
# Remove rows where Pixel_Value = 0
histogram_df <- histogram_df[histogram_df$pixel_values != 0, ]
hist(histogram_df)
colnames(histogram_df) <- c("Spectral_Species", "Count")
# Calculate total number of pixels (excluding 0 values)
total_pixels <- sum(histogram_df$Count)
# Convert counts to proportions (percentages)
histogram_df$Proportion <- histogram_df$Count / total_pixels
# Use the diversity() function from vegan
shannon_index <- diversity(histogram_df$Count, index = "shannon")
# Print the result
print(shannon_index)
}
for (ss_image in spectral_species_images) {
image_name <- basename(ss_image)
testsite_name <- sub("_SpectralSpecies\\.tiff$", "", image_name)
image <- rast(ss_image)
#hist(image)
# Extract raster values as a vector
pixel_values <- values(image)
# Count occurrences of each unique value
pixel_counts <- table(pixel_values)
# Print results
print(pixel_counts)
# Convert to a data frame
histogram_df <- as.data.frame(pixel_counts)
# Remove rows where Pixel_Value = 0
histogram_df <- histogram_df[histogram_df$pixel_values != 0, ]
colnames(histogram_df) <- c("Spectral_Species", "Count")
hist(histogram_df$Count)
# Calculate total number of pixels (excluding 0 values)
total_pixels <- sum(histogram_df$Count)
# Convert counts to proportions (percentages)
histogram_df$Proportion <- histogram_df$Count / total_pixels
# Use the diversity() function from vegan
shannon_index <- diversity(histogram_df$Count, index = "shannon")
# Print the result
print(shannon_index)
}
View(histogram_df)
View(histogram_df)
for (ss_image in spectral_species_images) {
image_name <- basename(ss_image)
testsite_name <- sub("_SpectralSpecies\\.tiff$", "", image_name)
image <- rast(ss_image)
#hist(image)
# Extract raster values as a vector
pixel_values <- values(image)
# Count occurrences of each unique value
pixel_counts <- table(pixel_values)
# Print results
print(pixel_counts)
# Convert to a data frame
histogram_df <- as.data.frame(pixel_counts)
# Remove rows where Pixel_Value = 0
histogram_df <- histogram_df[histogram_df$pixel_values != 0, ]
colnames(histogram_df) <- c("Spectral_Species", "Count")
hist(histogram_df$Count)
# Calculate total number of pixels (excluding 0 values)
total_pixels <- sum(histogram_df$Count)
# Convert counts to proportions (percentages)
histogram_df$Proportion <- histogram_df$Count / total_pixels
# Use the diversity() function from vegan
shannon_index <- diversity(histogram_df$Count, index = "shannon")
# Print the result
print(shannon_index)
}
rm(list = ls(all = TRUE))
gc()
graphics.off()
# Load necessary libraries
library(vegan)
library(biodivMapR)
library(doParallel)
library(terra)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(RColorBrewer)
library(readxl)
library(writexl)
library(dplyr)
main_folder <- 'C:/Users/Patrick/Documents/GitHub/UWW200_Master_Thesis_public/MasterThesisRCode/data'
spectral_species_files_path <- file.path(main_folder,'03_Spectral_Species')
spectral_species_images <- list.files(spectral_species_files_path, full.names = TRUE)
for (ss_image in spectral_species_images) {
image_name <- basename(ss_image)
testsite_name <- sub("_SpectralSpecies\\.tiff$", "", image_name)
image <- rast(ss_image)
#hist(image)
# Extract raster values as a vector
pixel_values <- values(image)
# Count occurrences of each unique value
pixel_counts <- table(pixel_values)
# Print results
print(pixel_counts)
# Convert to a data frame
histogram_df <- as.data.frame(pixel_counts)
# Remove rows where Pixel_Value = 0
histogram_df <- histogram_df[histogram_df$pixel_values != 0, ]
colnames(histogram_df) <- c("Spectral_Species", "Count")
barplot(histogram_df$Count, names.arg = histogram_df$Spectral_Species,
main = paste("Spectral Species Distribution -", testsite_name),
xlab = "Spectral Species", ylab = "Count", col = "steelblue", las = 2)
# Calculate total number of pixels (excluding 0 values)
total_pixels <- sum(histogram_df$Count)
# Convert counts to proportions (percentages)
histogram_df$Proportion <- histogram_df$Count / total_pixels
# Use the diversity() function from vegan
shannon_index <- diversity(histogram_df$Count, index = "shannon")
# Print the result
print(shannon_index)
}
rm(list = ls(all = TRUE))
gc()
graphics.off()
# Load necessary libraries
library(vegan)
library(biodivMapR)
library(doParallel)
library(terra)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(RColorBrewer)
library(readxl)
library(writexl)
library(dplyr)
main_folder <- 'C:/Users/Patrick/Documents/GitHub/UWW200_Master_Thesis_public/MasterThesisRCode/data'
spectral_species_files_path <- file.path(main_folder,'03_Spectral_Species')
metrics_file_path <- file.path(main_folder,'07_Testsite_Metrics','Metrics.xlsx')
spectral_species_images <- list.files(spectral_species_files_path, full.names = TRUE)
#read excel with pca info
metrics_data <- read_excel(metrics_file_path, sheet = "Sheet1")
for (ss_image in spectral_species_images) {
image_name <- basename(ss_image)
test_site_name <- sub("_SpectralSpecies\\.tiff$", "", image_name)
image <- rast(ss_image)
#hist(image)
# Extract raster values as a vector
pixel_values <- values(image)
# Count occurrences of each unique value
pixel_counts <- table(pixel_values)
# Print results
print(pixel_counts)
# Convert to a data frame
histogram_df <- as.data.frame(pixel_counts)
# Remove rows where Pixel_Value = 0
histogram_df <- histogram_df[histogram_df$pixel_values != 0, ]
colnames(histogram_df) <- c("Spectral_Species", "Count")
histogram_df <- histogram_df[order(histogram_df$Count), ]  # Sort by count
barplot(histogram_df$Count, names.arg = histogram_df$Spectral_Species,
main = paste("Spectral Species Distribution -", testsite_name),
xlab = "Spectral Species", ylab = "Count", col = "steelblue", las = 2)
# Calculate total number of pixels (excluding 0 values)
total_pixels <- sum(histogram_df$Count)
# Convert counts to proportions (percentages)
histogram_df$Proportion <- histogram_df$Count / total_pixels
# Use the diversity() function from vegan
shannon_index <- diversity(histogram_df$Count, index = "shannon")
# Print the result
print(shannon_index)
# Update the 'SpectralSpecies' column
# metrics_data$Shannon_Diversity_Spectral[metrics_data$Plot_Location_Shp_Subset_Name == test_site_name] <- shannon_index
# write_xlsx(metrics_data, path = metrics_file_path)
}
rm(list = ls(all = TRUE))
gc()
graphics.off()
# Load necessary libraries
library(vegan)
library(biodivMapR)
library(doParallel)
library(terra)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(RColorBrewer)
library(readxl)
library(writexl)
library(dplyr)
main_folder <- 'C:/Users/Patrick/Documents/GitHub/UWW200_Master_Thesis_public/MasterThesisRCode/data'
spectral_species_files_path <- file.path(main_folder,'03_Spectral_Species')
metrics_file_path <- file.path(main_folder,'07_Testsite_Metrics','Metrics.xlsx')
spectral_species_images <- list.files(spectral_species_files_path, full.names = TRUE)
#read excel with pca info
metrics_data <- read_excel(metrics_file_path, sheet = "Sheet1")
for (ss_image in spectral_species_images) {
image_name <- basename(ss_image)
test_site_name <- sub("_SpectralSpecies\\.tiff$", "", image_name)
image <- rast(ss_image)
#hist(image)
# Extract raster values as a vector
pixel_values <- values(image)
# Count occurrences of each unique value
pixel_counts <- table(pixel_values)
# Print results
print(pixel_counts)
# Convert to a data frame
histogram_df <- as.data.frame(pixel_counts)
# Remove rows where Pixel_Value = 0
histogram_df <- histogram_df[histogram_df$pixel_values != 0, ]
colnames(histogram_df) <- c("Spectral_Species", "Count")
histogram_df <- histogram_df[order(histogram_df$Count), ]  # Sort by count
barplot(histogram_df$Count, names.arg = histogram_df$Spectral_Species,
main = paste("Spectral Species Distribution -", test_site_name),
xlab = "Spectral Species", ylab = "Count", col = "steelblue", las = 2)
# Calculate total number of pixels (excluding 0 values)
total_pixels <- sum(histogram_df$Count)
# Convert counts to proportions (percentages)
histogram_df$Proportion <- histogram_df$Count / total_pixels
# Use the diversity() function from vegan
shannon_index <- diversity(histogram_df$Count, index = "shannon")
# Print the result
print(shannon_index)
# Update the 'SpectralSpecies' column
# metrics_data$Shannon_Diversity_Spectral[metrics_data$Plot_Location_Shp_Subset_Name == test_site_name] <- shannon_index
# write_xlsx(metrics_data, path = metrics_file_path)
}
rm(list = ls(all = TRUE))
gc()
graphics.off()
# Load necessary libraries
library(vegan)
library(biodivMapR)
library(doParallel)
library(terra)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(RColorBrewer)
library(readxl)
library(writexl)
library(dplyr)
main_folder <- 'C:/Users/Patrick/Documents/GitHub/UWW200_Master_Thesis_public/MasterThesisRCode/data'
spectral_species_files_path <- file.path(main_folder,'03_Spectral_Species')
metrics_file_path <- file.path(main_folder,'07_Testsite_Metrics','Shannon_Diversity_Plotlevel.xlsx')
spectral_species_images <- list.files(spectral_species_files_path, full.names = TRUE)
#read excel with pca info
metrics_data <- read_excel(metrics_file_path, sheet = "Sheet1")
for (ss_image in spectral_species_images) {
image_name <- basename(ss_image)
test_site_name <- sub("_SpectralSpecies\\.tiff$", "", image_name)
image <- rast(ss_image)
#hist(image)
# Extract raster values as a vector
pixel_values <- values(image)
# Count occurrences of each unique value
pixel_counts <- table(pixel_values)
# Print results
print(pixel_counts)
# Convert to a data frame
histogram_df <- as.data.frame(pixel_counts)
# Remove rows where Pixel_Value = 0
histogram_df <- histogram_df[histogram_df$pixel_values != 0, ]
colnames(histogram_df) <- c("Spectral_Species", "Count")
histogram_df <- histogram_df[order(histogram_df$Count), ]  # Sort by count
barplot(histogram_df$Count, names.arg = histogram_df$Spectral_Species,
main = paste("Spectral Species Distribution -", test_site_name),
xlab = "Spectral Species", ylab = "Count", col = "steelblue", las = 2)
# Calculate total number of pixels (excluding 0 values)
total_pixels <- sum(histogram_df$Count)
# Convert counts to proportions (percentages)
histogram_df$Proportion <- histogram_df$Count / total_pixels
# Use the diversity() function from vegan
shannon_index <- diversity(histogram_df$Count, index = "shannon")
# Print the result
print(shannon_index)
# Update the 'SpectralSpecies' column
metrics_data$Shannon_Diversity_Spectral[metrics_data$Plot_Location_Shp_Subset_Name == test_site_name] <- shannon_index
write_xlsx(metrics_data, path = metrics_file_path)
}
rm(list = ls(all = TRUE))
gc()
graphics.off()
# Load necessary libraries
library(vegan)
library(biodivMapR)
library(doParallel)
library(terra)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(RColorBrewer)
library(readxl)
library(writexl)
library(dplyr)
main_folder <- 'C:/Users/Patrick/Documents/GitHub/UWW200_Master_Thesis_public/MasterThesisRCode/data'
spectral_species_files_path <- file.path(main_folder,'03_Spectral_Species')
metrics_file_path <- file.path(main_folder,'07_Testsite_Metrics','Shannon_Diversity_Plotlevel.xlsx')
spectral_species_images <- list.files(spectral_species_files_path, full.names = TRUE)
#read excel with pca info
metrics_data <- read_excel(metrics_file_path, sheet = "Sheet1")
for (ss_image in spectral_species_images) {
image_name <- basename(ss_image)
test_site_name <- sub("_SpectralSpecies\\.tiff$", "", image_name)
image <- rast(ss_image)
#hist(image)
# Extract raster values as a vector
pixel_values <- values(image)
# Count occurrences of each unique value
pixel_counts <- table(pixel_values)
# Print results
print(pixel_counts)
# Convert to a data frame
histogram_df <- as.data.frame(pixel_counts)
# Remove rows where Pixel_Value = 0
histogram_df <- histogram_df[histogram_df$pixel_values != 0, ]
colnames(histogram_df) <- c("Spectral_Species", "Count")
histogram_df <- histogram_df[order(histogram_df$Count), ]  # Sort by count
barplot(histogram_df$Count, names.arg = histogram_df$Spectral_Species,
main = paste("Spectral Species Distribution -", test_site_name),
xlab = "Spectral Species", ylab = "Count", col = "steelblue", las = 2)
# Calculate total number of pixels (excluding 0 values)
total_pixels <- sum(histogram_df$Count)
# Convert counts to proportions (percentages)
histogram_df$Proportion <- histogram_df$Count / total_pixels
# Use the diversity() function from vegan
shannon_index <- diversity(histogram_df$Count, index = "shannon")
# Print the result
print(shannon_index)
# Update the 'SpectralSpecies' column
metrics_data$Shannon_Diversity_Spectral[metrics_data$Testsite == test_site_name] <- shannon_index
write_xlsx(metrics_data, path = metrics_file_path)
}
